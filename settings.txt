# Assume the following commands have been executed.
# import subprocess, time, sys
# from subprocess import PIPE, STDOUT, DEVNULL

subprocess_args = (["dropbox", "status"],)
subprocess_kargs = {}

# Number of seconds between calls
period = 15

main_file = open("~/temp_track.txt", "w")

# timestamp is output to this stream. If None, then default to sys.stdout.
time_stamp_output = main_file
# Passed to subprocess.run(stdout = , stderr = ), so default is sys.stdout if these are None.
stdout = PIPE
stderr = PIPE

def my_terminating_condition(cp):
	print(cp.stdout.decode("utf-8"), file = main_file)
	print(cp.stderr.decode("utf-8"), file = main_file)
	if cp.stdout.find(b"Up to date") != -1:
		main_file.close()
		
		return True

# Function with CompletedProcess input. This function may also do some processing of the CompletedProcess if desired
# (example of post-processing may be pasting the completed process's stdout into a file.)
# Return True if you wish to terminate the program.
terminating_condition = 
